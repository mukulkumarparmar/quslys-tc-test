Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Scan configuration
        Parameters:
          - ServiceAccount
          - TargetRegions
      - Label:
          default: API Destination configuration
        Parameters:
          - QToken
          - APIDestinationEndpoint
          - EventBasedScan
    ParameterLabels:
      QToken:
        default: SubscriptionToken
Parameters:
  ServiceAccount:
    Type: String
    AllowedPattern: ^\d{1,16}$
    ConstraintDescription: Service account number is not valid.
    Description: Enter AWS Service Account Number
  TargetRegions:
    Type: List<String>
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-2
      - ap-southeast-3
      - ap-southeast-4
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ca-central-1
      - ca-west-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-south-2
      - eu-north-1
      - eu-central-2
      - il-central-1
      - me-south-1
      - me-central-1
      - sa-east-1
    Description: Provide the region(s) where the snapshot scan runs. Eg, ap-south-1, us-east-1
    MinLength: 1
  EventBasedScan:
    Type: String
    Default: Enabled
    AllowedValues:
      - Enabled
      - Disabled
    Description: Select 'Enabled' to run scanners immediately on newly created Instances
  QToken:
    Type: String
    AllowedPattern: ^$|^[\w\-]{1,64}\.[\w\-]{1,1024}\.[\w\-]{20,100}$
    ConstraintDescription: Token should match the given constraint.
    Description: Provide the Qualys subscription token, which is used in AWS service account as QToken.
    NoEcho: true
  APIDestinationEndpoint:
    Type: String
    AllowedPattern: ^$|^(https?:\/\/.)[-a-zA-Z0-9@:%._\+~#=]{2,256}([-a-zA-Z0-9@:%_\+.~#?&//=]*)$
    ConstraintDescription: It should be a valid URL.
    Description: Provide an AWS Service Account API Gateway Endpoint.
Rules:
  ApiShouldNotBeEmpty:
    RuleCondition:
      Fn::Equals:
        - Ref: EventBasedScan
        - Enabled
    Assertions:
      - AssertDescription: Api Endpoint must not be empty string when event based discovery is enabled
        Assert:
          Fn::Not:
            - Fn::Equals:
                - Ref: APIDestinationEndpoint
                - ""
      - AssertDescription: Api Key must not be empty string when event based discovery is enabled
        Assert:
          Fn::Not:
            - Fn::Equals:
                - Ref: QToken
                - ""
Resources:
  IamTargetAccountRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: ServiceAccount
                    - :root
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: An execution role to be assumed by step function in source account
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:CopySnapshot
                  - ec2:CreateSnapshot
                  - ec2:CreateTags
                  - ec2:DescribeImages
                  - ec2:DescribeInstances
                  - ec2:DescribeSnapshotAttribute
                  - ec2:DescribeSnapshots
                  - ec2:DescribeTags
                  - ec2:DescribeVolumes
                Effect: Allow
                Resource: "*"
              - Action:
                  - ec2:DeleteSnapshot
                  - ec2:ModifySnapshotAttribute
                Condition:
                  StringEquals:
                    aws:ResourceTag/App: qualys-snapshot-scanner
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :ec2:*::snapshot/*
              - Action: ec2:ModifySnapshotAttribute
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :ec2:*::snapshot/*
              - Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ListAliases
                  - kms:ListGrants
                  - kms:ReEncrypt*
                  - kms:RetireGrant
                Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":kms:*:"
                        - Ref: ServiceAccount
                        - :alias/qualys-snapshot-key
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":kms:*:"
                        - Ref: ServiceAccount
                        - :key/*
              - Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:ListGrants
                  - kms:ReEncrypt*
                Condition:
                  StringNotEqualsIfExists:
                    aws:ResourceTag/QualysDoNotTouch: "true"
                Effect: Allow
                Resource: "*"
              - Action: kms:CreateGrant
                Condition:
                  StringNotEqualsIfExists:
                    aws:ResourceTag/QualysDoNotTouch: "true"
                  ForAllValues:StringEquals:
                    kms:GrantOperations:
                      - ReEncryptFrom
                      - Decrypt
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: EC2SnapshotManagePolicy
      RoleName: qualys-snapshot-scanner-cross-account
  IamEventsSenderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
      RoleName: qualys-role-events-sender
      Tags:
        - Key: App
          Value: qualys-snapshot-scanner
  IamEventsSenderRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:InvokeApiDestination
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":events:*:"
                  - Ref: AWS::AccountId
                  - :api-destination/qualys-destination-service-api/*
        Version: "2012-10-17"
      PolicyName: IamEventsSenderRoleDefaultPolicy
      Roles:
        - Ref: IamEventsSenderRole
  IamRoleStacksetTargetAdmin:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sts:AssumeRole
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":iam::"
                      - Ref: AWS::AccountId
                      - :role/qualys-target-stackset-execution-role
            Version: "2012-10-17"
          PolicyName: assumeExecutionRolePolicy
      RoleName: qualys-target-stackset-admin-role
      Tags:
        - Key: App
          Value: qualys-snapshot-scanner
  IamRoleStacksetTargetExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - IamRoleStacksetTargetAdmin
                  - Arn
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - cloudformation:*
                  - events:CreateApiDestination
                  - events:CreateConnection
                  - events:DescribeApiDestination
                  - events:DescribeConnection
                  - events:DescribeEventBus
                  - events:DescribeEventSource
                  - events:DescribeRule
                  - events:PutRule
                  - events:PutTargets
                  - secretsmanager:CreateSecret
                  - secretsmanager:DescribeSecret
                Effect: Allow
                Resource: "*"
              - Action:
                  - secretsmanager:DeleteSecret
                  - secretsmanager:PutSecretValue
                  - secretsmanager:ReplicateSecretToRegions
                  - secretsmanager:UpdateSecret
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":secretsmanager:*:"
                      - Ref: AWS::AccountId
                      - :secret:events!connection/qualys-connection-service-api*
              - Action:
                  - events:DeauthorizeConnection
                  - events:DeleteApiDestination
                  - events:DeleteConnection
                  - events:DeleteRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:RemoveTargets
                  - events:UpdateApiDestination
                  - events:UpdateConnection
                Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":events:*:"
                        - Ref: AWS::AccountId
                        - :api-destination/qualys-destination-service-api*
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":events:*:"
                        - Ref: AWS::AccountId
                        - :connection/qualys-connection-service-api*
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":events:*:"
                        - Ref: AWS::AccountId
                        - :rule/qualys-rule-ami-events-sender*
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":events:*:"
                        - Ref: AWS::AccountId
                        - :rule/qualys-rule-ec2-events-sender*
              - Action: iam:PassRole
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - IamEventsSenderRole
                    - Arn
              - Action: iam:CreateServiceLinkedRole
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - :iam::*:role/aws-service-role/*/AWSServiceRoleForAmazonEventBridgeApiDestinations
            Version: "2012-10-17"
          PolicyName: assumeExecutionRolePolicy
      RoleName: qualys-target-stackset-execution-role
  TargetRegionStackSet:
    Type: AWS::CloudFormation::StackSet
    Properties:
      AdministrationRoleARN:
        Fn::GetAtt:
          - IamRoleStacksetTargetAdmin
          - Arn
      Description: deploys event rule across multiple region
      ExecutionRoleName:
        Ref: IamRoleStacksetTargetExecution
      Parameters:
        - ParameterKey: QToken
          ParameterValue:
            Ref: QToken
        - ParameterKey: APIDestinationEndpoint
          ParameterValue:
            Ref: APIDestinationEndpoint
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - Ref: AWS::AccountId
          Regions:
            Ref: TargetRegions
      StackSetName: qualys-cross-region-events
      Tags:
        - Key: App
          Value: qualys-snapshot-scanner
      TemplateBody: |
        {
          "Parameters": {
            "EventBasedScan": {
              "Type": "String",
              "Default": "Enabled",
              "AllowedValues": [
                "Enabled",
                "Disabled"
              ],
              "Description": "Select 'Enabled' to run scanners immediately on newly created Instances"
            },
            "QToken": {
              "Type": "String",
              "AllowedPattern": "^$|^[\\w\\-]{1,64}\\.[\\w\\-]{1,1024}\\.[\\w\\-]{20,100}$",
              "ConstraintDescription": "Token should match the given constraint.",
              "Description": "Provide the Qualys subscription token, which is used in AWS service account as QToken.",
              "NoEcho": true
            },
            "APIDestinationEndpoint": {
              "Type": "String",
              "AllowedPattern": "^$|^(https?:\\/\\/.)[-a-zA-Z0-9@:%._\\+~#=]{2,256}([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$",
              "ConstraintDescription": "It should be a valid URL.",
              "Description": "Provide an AWS Service Account API Gateway Endpoint."
            }
          },
          "Rules": {
            "ApiShouldNotBeEmpty": {
              "RuleCondition": {
                "Fn::Equals": [
                  {
                    "Ref": "EventBasedScan"
                  },
                  "Enabled"
                ]
              },
              "Assertions": [
                {
                  "AssertDescription": "Api Endpoint must not be empty string when event based discovery is enabled",
                  "Assert": {
                    "Fn::Not": [
                      {
                        "Fn::Equals": [
                          {
                            "Ref": "APIDestinationEndpoint"
                          },
                          ""
                        ]
                      }
                    ]
                  }
                },
                {
                  "AssertDescription": "Api Key must not be empty string when event based discovery is enabled",
                  "Assert": {
                    "Fn::Not": [
                      {
                        "Fn::Equals": [
                          {
                            "Ref": "QToken"
                          },
                          ""
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "Resources": {
            "EBServiceApiConnection": {
              "Type": "AWS::Events::Connection",
              "Properties": {
                "AuthParameters": {
                  "ApiKeyAuthParameters": {
                    "ApiKeyName": "x-api-key",
                    "ApiKeyValue": {
                      "Fn::Select": [
                        2,
                        {
                          "Fn::Split": [
                            ".",
                            {
                              "Ref": "QToken"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "AuthorizationType": "API_KEY",
                "Name": "qualys-connection-service-api"
              }
            },
            "EBServiceApiDestination": {
              "Type": "AWS::Events::ApiDestination",
              "Properties": {
                "ConnectionArn": {
                  "Fn::GetAtt": [
                    "EBServiceApiConnection",
                    "Arn"
                  ]
                },
                "HttpMethod": "POST",
                "InvocationEndpoint": {
                  "Ref": "APIDestinationEndpoint"
                },
                "InvocationRateLimitPerSecond": 10,
                "Name": "qualys-destination-service-api"
              }
            },
            "EC2EventsSender": {
              "Type": "AWS::Events::Rule",
              "Properties": {
                "EventPattern": {
                  "source": [
                    "aws.ec2"
                  ],
                  "detail-type": [
                    "EC2 Instance State-change Notification"
                  ],
                  "detail": {
                    "state": [
                      "running"
                    ]
                  }
                },
                "Name": "qualys-rule-ec2-events-sender",
                "State": "ENABLED",
                "Targets": [
                  {
                    "Arn": {
                      "Fn::GetAtt": [
                        "EBServiceApiDestination",
                        "Arn"
                      ]
                    },
                    "Id": "Target0",
                    "RoleArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iam::",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":role/qualys-role-events-sender"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "AMIEventsSender": {
              "Type": "AWS::Events::Rule",
              "Properties": {
                "EventPattern": {
                  "source": [
                    "aws.ec2"
                  ],
                  "detail-type": [
                    "EC2 AMI State Change"
                  ],
                  "detail": {
                    "State": [
                      "available"
                    ]
                  }
                },
                "Name": "qualys-rule-ami-events-sender",
                "State": "ENABLED",
                "Targets": [
                  {
                    "Arn": {
                      "Fn::GetAtt": [
                        "EBServiceApiDestination",
                        "Arn"
                      ]
                    },
                    "Id": "Target0",
                    "RoleArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iam::",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":role/qualys-role-events-sender"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
    Condition: DeployEventBased
Conditions:
  DeployEventBased:
    Fn::Equals:
      - Ref: EventBasedScan
      - Enabled

